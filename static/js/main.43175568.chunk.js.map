{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","id","username","getUser","userId","usersFromServer","find","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","visibleTodos","App","useState","setTodos","setTitle","setUser","titleError","setTitleError","userError","setUserError","newId","Math","max","handleSubmit","event","preventDefault","newTodo","currentTodos","action","method","onSubmit","type","placeholder","value","onChange","target","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43175568.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport usersFromServer from '../../api/users';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport function getUser(userId: number):User | null {\n  const foundUser = usersFromServer.find(user => userId === user.id);\n\n  return foundUser || null;\n}\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {getUser(userId) && <UserInfo user={getUser(userId)} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","/* eslint-disable max-len */\nimport { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { getUser } from './components/TodoInfo';\nimport { Todo } from './types/Todo';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nconst visibleTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId) || null,\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(visibleTodos);\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const newId = Math.max(...todos.map(todo => todo.id));\n\n  const resetForm = () => {\n    setUser(0);\n    setTitle('');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!user);\n\n    const newTodo:Todo = {\n      id: newId + 1,\n      title,\n      userId: user,\n      completed: false,\n      user: getUser(user),\n    };\n\n    if (user && title) {\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n      resetForm();\n    }\n  };\n\n  const inputTitle = (value: string) => {\n    if (value !== ' ') {\n      setTitleError(false);\n      setTitle(value);\n    } else {\n      setTitleError(true);\n    }\n  };\n\n  const selectUser = (value: number) => {\n    setUser(value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                inputTitle(event.target.value);\n              }}\n            />\n            { titleError && (\n              <span\n                className=\"error\"\n              >\n                Please enter a title\n              </span>\n            )}\n          </label>\n\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={user}\n              onChange={(event) => {\n                selectUser(+event.target.value);\n              }}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n              {usersFromServer.map(userFromServer => {\n                const {\n                  id,\n                  name,\n                } = userFromServer;\n\n                return (\n                  <option\n                    value={id}\n                    key={id}\n                  >\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n            { userError && (\n              <span\n                className=\"error\"\n              >\n                Please choose a user\n              </span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}